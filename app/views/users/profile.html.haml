#page_body
  .column_container
    .column.w_320.bg_vlightpurple.profile{:style => 'padding-bottom: 25px;'}
      %div.font22.bold.flex_center.bg_lightpurple{:style => 'padding: 25px 5px;margin: 0 -10px;'}
        =link_to @user.username, profile_user_path(@user.id)
        %span.render_user_flag{:style => 'height: 21px;'}
          = render :partial => 'users/render_user_flag', :locals => {:user => @user}
      - if @user.admin_rank_int
        %div.red.bold.center.font18
          #{@user.admin_title}
          %span
            =image_tag("rank/Rank_#{@user.admin_rank_int}.png", :class => "rank_icon_profile rank_icon_#{@user.admin_rank_int}")
      - elsif @user.contributor_rank_int
        %div.red.bold.center.font18
          #{@user.contributor_rank}
          %span
            =image_tag("rank/Rank_#{@user.contributor_rank_int}.png", :class => "rank_icon_profile rank_icon_#{@user.contributor_rank_int}")
      %div.center.font16.semiBold Member since: #{@user.created_at.strftime('%b %d, %Y')}
      - if current_user && (@user.id == current_user.id)
        %div.font14{:style => 'padding: 0 10px;'}
          =link_to "Update Email / Update Password / Delete Account", edit_user_registration_path
        %div{:style => 'padding: 0 10px;'}
          = form_tag update_user_flag_user_path(:action => 'update_user_flag', id: @user.id), :id => "update_user_flag_#{@user.id}", :remote => true, :method => 'post' do
            %label{:for => "user_flag", :class => 'mb_8 font14 darkgrey block'} Select a country or U.S. state flag to go with your username:
            =select_tag :user_flag, options_for_select(Country.list.map { |k,v| [v,k] }), { include_blank: true, :class => 'user_flag_select', :id => 'user_flag'}
            = submit_tag 'Save', :class => "save_button", :id => "save_user_flag_#{@user.id}"
      - else
        %div.font14{:style => 'padding: 0 15px;'}
          =link_to "LOGIN to Update Email / Update Password / Delete Account", new_user_session_path
    .column.w_560.mt_5
      %div.darkgrey.stats.font18
        %div.stat_num_o.bold
          %span.stats
            #{number_with_delimiter(@user.user_submissions_count,:delimiter => ",")}
        %span.stats_text Total Contributions
      %div.darkgrey.stats.font18
        %div.stat_num_o.bold
          %span.stats
            #{number_with_delimiter(@user.num_machines_added,:delimiter => ",")}
        %span.stats_text Machines Added
      %div.darkgrey.stats.font18
        %div.stat_num_o.bold
          %span.stats
            #{number_with_delimiter(@user.num_machines_removed,:delimiter => ",")}
        %span.stats_text Machines Removed
      %div.darkgrey.stats.font18
        %div.stat_num_o.bold
          %span.stats
            #{number_with_delimiter(@user.num_lmx_comments_left,:delimiter => ",")}
        %span.stats_text Machine Comments
      %div.darkgrey.stats.font18
        %div.stat_num_o.bold
          %span.stats
            #{number_with_delimiter(@user.num_msx_scores_added,:delimiter => ",")}
        %span.stats_text High Scores Added
      %div.darkgrey.stats.font18
        %div.stat_num_o.bold
          %span.stats
            #{number_with_delimiter(@user.num_locations_suggested,:delimiter => ",")}
        %span.stats_text Locations Submitted
      %div.darkgrey.stats.font18
        %div.stat_num_o.bold
          %span.stats
            #{number_with_delimiter(@user.num_locations_edited,:delimiter => ",")}
        %span.stats_text Locations Edited
      - if !@user.profile_list_of_edited_locations.empty?
        %div.darkgrey.stats.font18
          %div.ml_5.bold
            List of Locations Edited (with your last 50 updates):
          %span.stats_list
            - @user.profile_list_of_edited_locations.each do |location_array|
              - location_id, location_name = location_array
              %span.location_edited.mb_5
                = link_to(location_name, map_path + "/?by_location_id=#{location_id}")
      - if !@user.profile_list_of_high_scores.empty?
        %div.darkgrey.stats.font18
          %div.ml_5.bold
            High Scores (Last 50):
          %span.stats_list
            - @user.profile_list_of_high_scores.each do |score_array|
              - location_name, machine_name, score, date_created = score_array
              %span.score_machine.mt_10
                #{machine_name}
              %span.pt_5.block.bold
                #{number_with_precision(score, precision: 0, delimiter: ',')}
              %span.score_meta.inline at
              %span.score_meta_gen.inline.bold #{location_name}
              %span.score_meta.inline on
              %span.score_meta_gen.inline #{date_created}
      - if !@user.list_fave_locations.empty?
        %div.darkgrey.stats.font18
          %div.ml_5.bold
            Saved Locations:
          %span.stats_list
            - @user.list_fave_locations.each do |fave_location|
              %span.location_edited.mb_5
                = link_to(fave_location.location.name, map_path + "/?by_location_id=#{fave_location.location.id}")

:javascript
  $(document).ready(function() {
    $('.user_flag_select').select2({
      placeholder: 'Select a flag',
      allowClear: true,
      templateResult: formatOptions
    });
  });
  function formatOptions (state) {
    if (!state.id) { return state.text; }
    var $state = $(
    '<span><img style="display: inline-block;" src="https://flagcdn.com/16x12/' + state.element.value.toLowerCase() + '.png" /> ' + state.text + '</span>'
    );
    return $state;
  }
  $('#update_user_flag_#{@user.id}').submit(function () {
    var form = $(this);
    $.post(form.attr('action'), form.serialize(), function (data) {
      $('span.render_user_flag').load('/users/#{@user.id}/render_user_flag');
    });

    return false;
  });