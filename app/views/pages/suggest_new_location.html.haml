#page_body
  .column_container
    .column.bg_gray.w_640.suggest
      %h1.red Suggest a New Location
      - if user_signed_in?
        %p.serif Submit a new location to the map. We review all location submissions. Please be patient after submitting. Thanks for contributing!
        #location_maker
          = form_tag @region ? submitted_new_location_path : map_submitted_new_location_path, :method => 'post' do
            %form#submit_location
              %ul
                %li{:class => "first"}
                  %label{:for => "location_name"} Location Name:
                  %input{type: "text", name: "location_name", params: "location_name", class: "text", required: true}
                %li
                  %label{:for => "location_street"} Street:
                  %input{:type => "text", :name => "location_street", :params => "location_street", :class => "text"}
                %li{:class => "first"}
                  %label{:for => "location_city"} City:
                  %input{:type => "text", :name => "location_city", :params => "location_city", :class => "text"}
                %li
                  %label{:for => "location_state"} State:
                  - if @states.size > 0
                    = select_tag :location_state, options_for_select(@states)
                  - else
                    %input{:type => "text", :name => "location_state", :params => "location_state", :class => "text"}
                %li{:class => "first"}
                  %label{:for => "location_zip"} Zip:
                  %input{:type => "text", :name => "location_zip", :params => "location_zip", :class => "text"}
                %li
                  %label{:for => "location_country"} Country:
                  = country_select('suggested_location', 'location_country', {include_blank: true}, {name: 'location_country'})
                %li{:class => "first"}
                  %label{:for => "location_phone"} Phone:
                  %input{:type => "text", :name => "location_phone", :params => "location_phone", :class => "text"}
                %li
                  %label{:for => "location_website"} Website:
                  %input{:type => "text", :name => "location_website", :params => "location_website", :class => "text"}
                %li{:class => "first"}
                  %label{:for => "location_type"} Location Type:
                  = select_tag :location_type, options_for_select(@location_types)
                - if @operators.size > 1
                  %li{:class => "first"}
                    %label{:for => "location_operator"} Operator:
                    = select_tag :location_operator, options_for_select(@operators)
                - if @zones.size > 1
                  %li
                    %label{:for => "location_zone"} Zone:
                    = select_tag :location_zone, options_for_select(@zones)
                .clear
                %li.textbox
                  %label{:for => "location_comments"} Comments:
                  %textarea{:type => "text", :name => "location_comments", :params => "location_comments", :class => "text"}
                %li.serif.red
                  Please use the AUTOCOMPLETE in the "Machines" form below. Start typing, then select a result. If you don't, then your submission will take longer to be approved.
                %li.textbox
                  %label{:for => "location_machines"} Machines:
                  %textarea{type: "text", id: "location_machines", name: "location_machines", params: "location_machines", class: "text", required: true}
                  :javascript
                    $(function () {
                      function split( val ) {
                        return val.split( /,\s*/ );
                      }
                      function extractLast( term ) {
                        return split( term ).pop();
                      }
                      $('#location_machines')
                      .on( "keydown", function( event ) {
                        if ( event.keyCode === $.ui.keyCode.TAB &&
                        $( this ).autocomplete( "instance" ).menu.active ) {
                          event.preventDefault();
                        }
                      })
                      .autocomplete({
                        minLength: 0,
                        source: function( request, response ) {
                          $.getJSON( '/machines/autocomplete', {
                            term: extractLast( request.term )
                          }, response );
                        },
                        search: function() {
                          var term = extractLast( this.value );
                          if ( term.length < 2 ) {
                            return false;
                          }
                        },
                        focus: function() {
                          return false;
                        },
                        select: function( event, ui ) {
                          var terms = split( this.value );
                          terms.pop();
                          terms.push( ui.item.value );
                          terms.push( "" );
                          this.value = terms.join( ", " );
                          return false;
                        }
                      });
                    });
                %li.submit.mt_5{:style => "clear:both;"}
                  %input{:type => "submit", :value => "Submit New Location", :class => "submit_button"}
      - else
        %p.serif.ta_c
          But first! We ask that you
          = link_to 'Login.', new_user_session_path, :class => "darkgrey font18 sans bold"
          Thank you!
